{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Example Usage\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from pathlib import Path\n",
    "from typing import Any\n",
    "from {{packageName}}.config import Config\n",
    "from {{packageName}}.api import main\n",
    "from {{packageName}}.services import load_service_container\n",
    "\n",
    "\n",
    "cwd = Path.cwd() / \"notebooks\"\n",
    "\n",
    "config_settings: dict[str, Any] = {\n",
    "    \"cwd\": str(cwd),\n",
    "    \"text_chunker\": {\"id\": \"MyCusmtomTextChunker\", \"settings\": {\"chunk_size\": 1000}},\n",
    "}\n",
    "\n",
    "conf = Config(**config_settings)\n",
    "\n",
    "# NOT WORKING CODE - Register custom text chunker and run rest of pipeline as is\n",
    "service_container = load_service_container(config=conf)\n",
    "text_chunker_plugin_factory = service_container.text_chunker_plugin_factory()\n",
    "text_chunker_plugin_factory.register(\"MyCusmtomTextChunker\", CustomTextChunkerClass)\n",
    "\n",
    "main(conf)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "graphrag-modular-1HXQmVeh-py3.11",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
