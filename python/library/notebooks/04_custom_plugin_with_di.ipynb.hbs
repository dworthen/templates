{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Custom Plugin with DI\n",
    "\n",
    "This registers and uses a custom cache plugin that uses the LogService from the core library. That means any loggers that have been registered and configured for use, including third party loggers, will be used for the logging needs of this plugin.\n",
    "\n",
    "View the sample-plugins/llm-client-plugin-cache to see how a third party plugin can rely on services from the core library.\n",
    "\n",
    "Now when app runs you should see the cache operations logged.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setting cache key: my_cache_key with value: my_cache_value\n",
      "Retrieved from cache: my_cache_key with value: my_cache_value\n"
     ]
    }
   ],
   "source": [
    "from typing import Any\n",
    "\n",
    "from {{packageName}} import Config, create_sample_app, register_plugin\n",
    "from notebooks.custom_memory_cache import CustomMemoryCache\n",
    "\n",
    "\"\"\"\n",
    "The custom cache plugin is in a dedicated python file.\n",
    "This is so DI works correctly. Doesn't appear to work if\n",
    "class is in notebook.\n",
    "\"\"\"\n",
    "\n",
    "\n",
    "# Register the plugin\n",
    "register_plugin(CustomMemoryCache)\n",
    "\n",
    "\"\"\"\n",
    "Configure the library to use the plugin.\n",
    "The plugin is available using the plugin class name.\n",
    "\"\"\"\n",
    "\n",
    "settings: dict[str, Any] = {\n",
    "    \"cache\": {\n",
    "        \"plugin\": {\n",
    "            \"plugin_id\": \"CustomMemoryCache\",\n",
    "        }\n",
    "    }\n",
    "}\n",
    "\n",
    "\n",
    "conf = Config(**settings)\n",
    "\n",
    "app, _ = create_sample_app(conf)\n",
    "app.run()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "llm-client-nTwkRewb-py3.11",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
