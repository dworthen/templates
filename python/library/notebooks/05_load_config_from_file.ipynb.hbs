{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Load Config From File\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Setting cache key: my_cache_key with value: my_cache_value\n",
      "Retrieved from cache: my_cache_key with value: my_cache_value\n"
     ]
    }
   ],
   "source": [
    "from pathlib import Path\n",
    "\n",
    "from {{packageName}} import Config, create_sample_app, load_config\n",
    "\n",
    "cwd = Path.cwd()\n",
    "config_path = cwd / \"config.yaml\"\n",
    "dotenv_path = cwd / \".env\"\n",
    "\n",
    "\n",
    "\"\"\"\n",
    "Can override config values that are present in the config.yaml file.\n",
    "This will recursively merge dicts/lists so you only\n",
    "need to set the values you want to override.\n",
    "See cli/comand_one.py for an example of how to set \n",
    "overrides based on CLI flags.\n",
    "\"\"\"\n",
    "\n",
    "config_overrides = {\n",
    "    \"cache\": {\n",
    "        \"clear_cache\": True,\n",
    "        \"skip_cache\": False,\n",
    "    }\n",
    "}\n",
    "\n",
    "config = load_config(\n",
    "    config_path=config_path,\n",
    "    config_initializer=Config,\n",
    "    parse_env_vars=True,\n",
    "    env_var_file=dotenv_path,\n",
    "    overrides=config_overrides,\n",
    ")\n",
    "\n",
    "app, _ = create_sample_app(config)\n",
    "app.run()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "llm-client-nTwkRewb-py3.11",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
